name: workflow

on:
    push:
        branches:
            - main
        paths-ignore:
            - 'README.md'

jobs:
    integration:
        name: continous integration
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Lint Code
              run: echo "Lintint repository"

            - name: run unit tests
              run: echo "Running unit tests"
    
    
    build-and-push-ecr-image:
        name: continous delivery
        needs: integration
        runs-on: ubuntu-latest
        steps:
            - name: checkout code
              uses: actions/checkout@v3

            - name: Install Utilities
              run: |
                sudo apt-get update
                sudo apt-get install -y jq unzip
            
            - name: configure aws credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: ${{secrets.AWS_REGION}}

            - name: Login to AWS ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Buuild , tag and push image to Amazon ECR
              id:  build-image
              env:
                ECR_REGISTRY: ${{ secrets.AWS_ECR_LOGIN_URI }}
                ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
                IMAGE_TAG: latest
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
    Continous-Deployement:
        needs: build-and-push-ecr-image
        runs-on: self-hosted
        steps:

            - name: Free up disk space
              run: |
                echo "Before cleanup:"
                df -h
                sudo rm -rf /usr/share/dotnet || true
                sudo rm -rf /opt/ghc || true
                sudo rm -rf /usr/local/lib/android || true
                sudo docker system prune -af || true
                echo "After cleanup:"
                df -h
            - name: Checkout
              uses: actions/checkout@v3
            
            - name: configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: ${{secrets.AWS_REGION}}

            - name: Login to AWS ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
            
            - name: pull latest image
              run: |
                docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
            
            - name: run docker mage to serve users
              run: |
                docker run -d --name=atsresume -p 8080:8080 --ipc='host' -e 'AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}'  -e 'AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}' -e 'AWS_REGION=${{secrets.AWS_REGION}}'\${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
            - name: clean previous images and containers
              run: |
                docker system prune -f
                



               

                  
